/******************************************************************************

Welcome to GDB Online.
GDB online is an online compiler and debugger tool for C, C++, Python, Java, PHP, Ruby, Perl,
C#, OCaml, VB, Swift, Pascal, Fortran, Haskell, Objective-C, Assembly, HTML, CSS, JS, SQLite, Prolog.
Code, Compile, Run and Debug online from anywhere in world.

*******************************************************************************/
#include <iostream>
#include<vector>
#include<cstring>
using namespace std;

int dp[101][101];
int countSubSetSum(vector<int>a,int n,int sum,int count){
    if(n == 0){
        if(sum == 0)
            return 1;
        return 0;
    }
    if(sum == 0)
        return 1;
    if(dp[n][sum] != -1)
        return dp[n][sum];
    
    if(sum >= a[n-1]){
        count = countSubSetSum(a,n-1,sum-a[n-1],count+1) + countSubSetSum(a,n-1,sum,count);
        dp[n][sum] = count;
        return dp[n][sum];
    }
    count = countSubSetSum(a,n-1,sum,count);
    dp[n][sum] = count;
    return dp[n][sum];
}


int solve(vector<int>a,int n,int sum){
    
    vector<vector<int>>t(20,vector<int>(20,0));
    for(int i =0;i<n+1;i++){
        for(int j =0;j<sum+1;j++)
        {
            
            if(i == 0 )
                t[i][j] = 0;
            if(j == 0)
                t[i][j] = 1;
            
            else if(i!= 0 && j != 0){
                
                if(j >= a[i-1]){
                    t[i][j] = t[i-1][j-a[i-1]] + t[i-1][j];
                }
                else{
                    t[i][j] = t[i-1][j];
                }
            }
        }
    }
    
    for(vector<int>v:t){
        for(int val : v)
            cout<<val <<" " ;
        cout<<endl;
    }
    return t[n][sum];
}

int main()
{
    vector<int>a = {2,3,5,8,6,10,1,4,7,9};
    memset(dp,-1,sizeof(dp));
    //cout<<countSubSetSum(a,a.size(),10,0);
    cout<<solve(a,a.size(),10);
    return 0;
}
